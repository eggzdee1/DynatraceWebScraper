
Am I going down the wrong path for the query key. Rather than querying by Kubernetes namespace, should I stick to tag?Thinking about it, maybe tag is a wiser choice since services can span both cloud and non-cloud applications.

----------------


Uggh, figured it out... For anyone that stumbles across this, it's really weird.Apparently there are two ways of filtering timeseries data in DQL:in and lookup. in has better performance, but you're restricted to use whatever fields are part of the timeseries command output, which are just the metric, the timestamps, and the entityID of whatever you're querying.  No name data or anything like that (which honestly makes it kind of useless... Who wants to display metric data with Entity ID's?  People want readable names...)lookup doesn't perform as well, but, you can add in any fields you want to be fed to the output, so you aren't stuck with just the entity id.  This is what I ended up with (this query returns the average CPU of all hosts in a specific management zone, grouped by the host groups):timeseries usage=avg(dt.host.cpu.usage), by:{dt.entity.host}
| lookup [fetch dt.entity.host
| fieldsAdd hostGroupName, managementZones],lookupField:id , sourceField:dt.entity.host
| filter matchesValue(lookup.managementZones ,"Zone 1")
| summarize AvgCpu = avg(arrayMax(usage)), by:{lookup.hostGroupName}    Now I just need to add some time filters to the query and figure out how to get it to work in an API call and I can finally be done with what should have been an incredibly simple task...

----------------

Hi,What type of problem do you mean?R.

	Have a nice day!


----------------

If you need a host to have both the tags TYPE:Oracle Database Server and Capability:Global Money Transfer, then you can merge your filters in step 4 and 5 with an and as you suggest in the following way::filter(and(in("dt.entity.host", entitySelector("type(~"HOST~"),tag(~"TYPE:Oracle Database Server~")")),in("dt.entity.host", entitySelector("type(~"HOST~"),tag(~"Capability:Global Money Transfer~")"))))If you need hosts that have any of the tags, then you can just do::filter(in("dt.entity.host", entitySelector("type(~"HOST~"),tag(~"TYPE:Oracle Database Server~",~"Capability:Global Money Transfer~")")))Hopefully this helps.

----------------

Hi Stephen - DQL is only used for querying logs and events with Grail: DQL Documentation.
 
For the metric selector, metric queries are handled differently, and do not use DQL. I'd recommend checking out the Data Explorer Advanced Mode to get a better idea of how metric queries are handled.
 
 

----------------


Hi @srpuvvala If you have it within a single DT cluster then you can move license allocations between environments. Otherwise, contact Dynatrace (preferably the licensing department via a ticket in support)Radek

	Have a nice day!


----------------

Hey,I assume you instrument your app with the Dynatrace Android Gradle plugin, because user actions like "Touch on ImageView" are only generated when auto-instrumentation (via the plugin) is enabled. You can verify this assumption by looking at the build.gradle files and check if the snippets from this page were added.The linked setting "withActivityMonitoring" only deactivate monitoring for activity lifecycle events. Only the action "Loading SmartphoneHomeActivity" falls into this category. The other actions are generated by the different auto-instrumentation features of the Dynatrace Android Gradle plugin.The Dynatrace Android Gradle plugin allows users to deactivate all auto-instrumentation features via the plugin DSL. When you want to deactivate ALL auto-instrumentation features, then Dynatrace recommends to remove the plugin snippets from your build.gradle files and instead use standalone-manual instrumentation, because the plugin affects the build time of non-incremental builds.When the standalone-manual instrumentation is used, only two monitoring features are enabled by default: crash reporting and activity lifecycle monitoring. You can deactivate both features via the configuration builder (see JavaDoc)

----------------

Hi @veranikabarel!From the error you're getting, I suspect that you're utilizing the "Run Javascript" action to read/write AppState. Unfortunately, it won't work, as the State API requires app context (its ID, to be precise) to work, whereas "Run Javascript" is an ad-hoc action with no app context (ID).To make it work, you would need an app function. Also, you can find more details about the State SDK client in the documentation.Please let me know if I can help you further.

Senior Software Engineer @ Dynatrace


----------------


Hello @henk_stobbe As I know from my experience (I have several cases) it is not possible.If you have Dynatrace features (sensors) (parts of OneAgent) that instruments some endpoint classess/methods you can only switch it OFF or ON.For this cases Support highly recommended use OneAgent SDK and instrument only methods that have value for Customer team. Anyway, if this behavior has changed, I will be happy to see that I am wrong Also, btw, from a research perspective, you can reach the support. They have all the tools to determine what happens during the instrumentation process. Regards, Alex Romanenkov

	DT_NGINX_ALL_WHITELISTED=1


----------------

Hi @uzahid,It is not possible.When you have already choosen your metrics and try to change the vizualization you can see an information about if you chose that vizualization there will be limitation eg. only one matric vizualization is possible.Based on the documnetation:"By default, this visualization shows the first metric of a multi-metric query."https://www.dynatrace.com/support/help/shortlink/visualization-honeycomb#change-metric-selection I hope it helps.Best regards,Mizső

	Certified Dynatrace Professional


----------------
